name: "SonarQube (Composite)"
description: "A wrapper for SonarQube analysis."

inputs:
  SonarToken:
    description: "i.e. secrets.SONAR_TOKEN"
    required: true
  BuildCommand:
    description: "i.e. dotnet build -c Release"
    default: dotnet build -c Release

runs:
  using: composite
  steps:

  - name: Set up JDK 11
    uses: actions/setup-java@v1
    with:
      java-version: 1.11
  # - uses: actions/checkout@v2
  #   with:
  #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  - name: Cache SonarCloud packages
    uses: actions/cache@v1
    with:
      path: ~\sonar\cache
      key: ${{ runner.os }}-sonar
      restore-keys: ${{ runner.os }}-sonar
  - name: Cache SonarCloud scanner
    id: cache-sonar-scanner
    uses: actions/cache@v1
    with:
      path: .\.sonar\scanner
      key: ${{ runner.os }}-sonar-scanner
      restore-keys: ${{ runner.os }}-sonar-scanner
  - name: Install SonarCloud scanner
    if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
    shell: powershell
    run: |
      New-Item -Path .\.sonar\scanner -ItemType Directory
      dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  - name: Build and analyze
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      SONAR_TOKEN: ${{ inputs.SonarToken }}
    shell: powershell
    run: |
      .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ github.actor }}_${{ github.event.repository.name }}" /o:"${{ github.actor }}" /d:sonar.login="${{ inputs.SonarToken }}" /d:sonar.host.url="https://sonarcloud.io"
      ${{ inputs.BuildCommand }}
      .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ inputs.SonarToken }}"